<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 指定日志输出目录，勿在 LogBack 的配置中使用相对路径 -->
    <property name="LOG_HOME" value="./logs" />
    <!-- 输出到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 输出的格式 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                <!-- 生成环境 -->
                <!-- %d [%thread] %level %logger{80} (%line\) | %msg%n -->
                <!-- 测试环境，可打印行号链接，便于测试追踪 -->
                %d [%thread] %level %replace(%caller{1}){' at |\t|Caller.{1}0|\r\n', ''} | %msg%n
            </Pattern>
        </layout>
    </appender>

    <!-- 按天生成文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 配置滚动的策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志名称的格式 -->
            <fileNamePattern>${LOG_HOME}/logback.log.%d{yyyy-MM-dd}
            </fileNamePattern>
            <!-- 保存的最长时间：天数（单位根据滚动时间类型来定） -->
            <MaxHistory>15</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d [%thread] %level %logger{80} (%line\) | %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小 -->
        <!-- <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy"> -->
        <!-- <MaxFileSize>100MB</MaxFileSize> -->
        <!-- </triggeringPolicy> -->
    </appender>

    <!-- 指定特殊包的日志级别 -->
    <logger name="org.springframework" level="info" additivity="false">
        <appender-ref ref="STDOUT" />
    </logger>

    <!-- 相当于logger元素，只是name值已经确定为root了 -->
    <root level="error">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
</configuration>